export declare class OneAIError extends Error {
    statusCode: number;
    details?: string;
    requestId?: string;
    constructor(statusCode: number, message: string, details?: string, requestId?: string);
    toJSON: () => {
        statusCode: number;
        details: string | undefined;
        requestId: string | undefined;
    };
}
/** An error raised when the input is invalid or is of an incompatible type for the pipeline. */
export declare class InputError extends OneAIError {
    constructor(statusCode: number, message: string, details?: string, requestId?: string);
}
/** An error raised when the API key is invalid, expired, or missing quota. */
export declare class APIKeyError extends OneAIError {
    constructor(statusCode: number, message: string, details?: string, requestId?: string);
}
/** An error raised when something went wrong on One AI servers. */
export declare class ServerError extends OneAIError {
    constructor(statusCode: number, message: string, details?: string, requestId?: string);
}
export declare const httpStatusErrorType: {
    [key: string]: typeof OneAIError;
};
