import type { Skill, Output, Label } from './classes';
export declare const skills: {
    summarize: (params?: {
        min_length?: number | undefined;
        max_length?: number | undefined;
        find_origins?: boolean | undefined;
    } | undefined) => Skill;
    emotions: () => Skill;
    keywords: () => Skill;
    /** @deprecated since v. 0.0.9- use `splitBySentence` instead */
    sentences: () => Skill;
    highlights: () => Skill;
    topics: () => Skill;
    sentiments: () => Skill;
    htmlToArticle: () => Skill;
    htmlAllText: () => Skill;
    proofread: () => Skill;
    actionItems: () => Skill;
    anonymize: () => Skill;
    names: () => Skill;
    numbers: () => Skill;
    splitBySentence: () => Skill;
    splitByTopic: () => Skill;
    salesInsights: () => Skill;
    transcribe: (params?: {
        timestamp_per_word?: boolean | undefined;
    } | undefined) => Skill;
    detectLanguage: () => Skill;
    headline: () => Skill;
    subheading: () => Skill;
    pricing: () => Skill;
};
export interface OutputFields {
    summary?: Output;
    htmlArticle?: Output;
    htmlFields?: Label[];
    origins?: Label[];
    emotions?: Label[];
    proofread?: Output;
    replacements?: Label[];
    keywords?: Label[];
    sentences?: Label[];
    highlights?: Label[];
    topics?: Label[];
    sentiments?: Label[];
    actionItems?: Label[];
    anonymized?: Output;
    anonymizations?: Label[];
    names?: Label[];
    numbers?: Label[];
    segments?: Label[];
    salesInsights?: Label[];
    transcription?: Output;
    words?: Label[];
    language?: Label[];
    headline?: Label[];
    subheading?: Label[];
    pricing?: Label[];
}
